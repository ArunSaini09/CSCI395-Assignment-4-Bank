{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","addCredit","placeholder","step","Debits","debits","debit","addDebit","App","logInInfo","newUser","currentUser","event","Date","debitDate","getFullYear","getMonth","getDay","newDebit","Math","floor","random","debitList","creditDate","newCredit","Number","creditList","a","fetch","then","response","json","data","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2563d05.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits </Link>\n        <br/>\n        <Link to=\"/debits\">Debits </Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}  // Create an object for state\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n  // Create the list of Credit items\n  let creditsView = () => {\n    return props.credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    }) \n  }//end creditsView\n  \n  \n  return (\n    <div>\n      <h1>Credits</h1>\n\n      {creditsView()}\n      \n      <form onSubmit={props.addCredit}> \n        <input type=\"text\" name=\"description\" placeholder=\"description\"/>\n        <input type=\"number\" name=\"amount\" placeholder=\"amount\" step=\"0.01\"/>\n        <button type=\"submit\">Add Credit</button>\n      </form>\n\n      <br/>\n      <AccountBalance accountBalance={props.accountBalance} />\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    return props.debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    }) \n  }//end debitsView\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}> \n        <input type=\"text\" name=\"description\" placeholder=\"description\"/>\n        <input type=\"number\" name=\"amount\" placeholder=\"amount\" step=\"0.01\"/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n\n      <br/>\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      debitList: [],\n      creditList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n  //Update debit list and accountBalance\n  addDebit = (event) => {\n    //prevents page refresh\n    event.preventDefault();\n    //create date obj\n    const date = new Date();\n    const debitDate = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDay();\n    //create newDebit obj with same fields from API\n    let newDebit = {\n      \"id\": Math.floor(Math.random() * 99),\n      \"description\": event.target[0].value,\n      \"amount\": event.target[1].value,\n      \"date\": debitDate\n    }\n    //set new states\n     this.setState({\n      accountBalance: this.state.accountBalance - event.target[1].value,\n      //debitList is an array of objects, render the api data and then the newDebit object\n      debitList: [...this.state.debitList, newDebit]\n    });\n     \n  }\n\n  //Update credit list and accountBalance\n  addCredit = (event) => {\n    //prevents page refresh\n    event.preventDefault();\n    //create date obj\n    const date = new Date();\n    const creditDate = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDay();\n    //create newCredit obj with same fields from API\n    let newCredit = {\n      \"id\": Math.floor(Math.random() * 99),\n      \"description\": event.target[0].value,\n      \"amount\": event.target[1].value,\n      \"date\": creditDate\n    }\n    //set new states\n     this.setState({\n      accountBalance: this.state.accountBalance + Number(event.target[1].value),\n      //creditList is an array of objects, render the api data and then the newCredit object\n      creditList: [...this.state.creditList, newCredit]\n    });\n     \n  }\n\n\n  //make api call\n  async componentDidMount() {\n    //debits///////////////////////////////////\n    const url = \"https://moj-api.herokuapp.com/debits\";\n    fetch(url).then(response => response.json())\n    .then((data) => {\n      this.setState({debitList: data});\n    }) \n\n    //credit////////////////////////////////////\n    const url2 = \"https://moj-api.herokuapp.com/credits\";\n    fetch(url2).then(response => response.json())\n    .then((data) => {\n      this.setState({creditList: data});\n    })\n    \n  };\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} accountBalance={this.state.accountBalance} addDebit={this.addDebit}/>) \n    const CreditsComponent = () => (<Credits credits={this.state.creditList} accountBalance={this.state.accountBalance} addCredit={this.addCredit}/>)\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/CSCI395-Assignment-4-Bank\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}